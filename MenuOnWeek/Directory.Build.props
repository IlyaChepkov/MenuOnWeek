<Project>
  <PropertyGroup>
    <SolutionDir>$(MSBuildThisFileDirectory)</SolutionDir>
    <BuildPropsDir>$(SolutionDir)</BuildPropsDir>
    <TestsDir>$(SolutionDir)tests/</TestsDir>
    <IsPackable>False</IsPackable>
  </PropertyGroup>

  <!--Свойства для макросов-->
  <PropertyGroup>
    <CompanyName>IlyaInc</CompanyName>
    <CurrentDate>$([System.DateTime]::Now.ToString(yyyy.MM.dd))</CurrentDate>
    <CurrentYear>$([System.DateTime]::Now.ToString(yyyy))</CurrentYear>
    <CommonPrefix>MenuOnWeek</CommonPrefix>
  </PropertyGroup>

  <!--Атрибуты сборки-->
  <PropertyGroup>
    <Copyright>Copyright $(CurrentYear) © $(CompanyName). All rights reserved</Copyright>
    <Authors>$(CompanyName)</Authors>
    <Company>$(CompanyName)</Company>
    <AssemblyName>$(CommonPrefix).$(MSBuildProjectName)</AssemblyName>
    <RootNamespace>$(CommonPrefix).$(MSBuildProjectName)</RootNamespace>
  </PropertyGroup>

  <!--Сопутствующие артефакты-->
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <EmbedAllSources>true</EmbedAllSources>
    <DebugType>embedded</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <!--Настройки синтаксиса и анализа-->
  <PropertyGroup>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup Condition="'$(IsTestProject)' == ''">
    <IsTestProject>$(MSBuildProjectName.Contains(`Tests`))</IsTestProject>
  </PropertyGroup>

  <!--Импорт msbuild-свойств, определяемых после загрузки проектного файла-->
  <!--Подключение стандартных анализаторов-->
  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis">
      <PrivateAssets>All</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers">
      <PrivateAssets>All</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <!--Тестовые зависимости: xUnit + полезности -->
  <ItemGroup Condition="'$(IsTestProject)' == 'true'">
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="xunit" />
    <PackageReference Include="xunit.runner.visualstudio">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Moq" />
    <PackageReference Include="TeamCity.VSTest.TestAdapter" />
    <PackageReference Include="Shouldly" />
  </ItemGroup>

  <!-- Даём тестовым проектам доступ к internal типам основных проектов -->
  <ItemGroup Condition="'$(IsTestProject)' != 'true'">
    <InternalsVisibleTo Include="$(CommonPrefix).IntegrationTests" />
    <InternalsVisibleTo Include="$(CommonPrefix).UnitTests" />
  </ItemGroup>

  <!-- Даём Castle.DynamicProxy доступ к internal типам всех проектов (необходимо для Moq) -->
  <ItemGroup Condition="'$(SignAssembly)' != 'true'">
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" />
  </ItemGroup>

</Project>
